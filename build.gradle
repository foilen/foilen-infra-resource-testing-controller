plugins {
  id "com.github.ben-manes.versions" version "$versionsVersion"
  id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
}

apply plugin: 'eclipse'
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = 'com.foilen'
version = System.getenv('VERSION')?:'master-SNAPSHOT'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

repositories {
  mavenLocal()
  mavenCentral()
}

sourceCompatibility = 11

dependencyManagement {
  imports {
    mavenBom "org.springframework.boot:spring-boot-starter-parent:$springBootVersion"
  }
}

eclipse {
  classpath {
    downloadSources = true
    downloadJavadoc = true
  }
}

dependencies {
  implementation "com.foilen:foilen-infra-plugin-core:$foilenInfraPluginVersion"
  implementation "com.foilen:foilen-infra-resource-example:$foilenInfraResourceExampleVersion"
}

java {
  withJavadocJar()
  withSourcesJar()
}

publishing {
  repositories {
    maven {
      url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      credentials {
        username = System.getenv('OSSRH_USER')
        password = System.getenv('OSSRH_PASS')
      }
    }
  }

  publications {
    mavenJava(MavenPublication) {
      pom {
        name = "foilen-infra-resource-testing-controller"
        description = 'A plugin with some resources for testing purpose'
        url = 'https://github.com/foilen/foilen-infra-resource-testing-controller'
        from components.java
        
        scm {
          connection = "scm:git:git@github.com:foilen/foilen-infra-resource-testing-controller.git"
          url = "https://github.com/foilen/foilen-infra-resource-testing-controller"
        }

        licenses {
          license {
            name = "MIT"
            url = "https://opensource.org/licenses/MIT"
          }
        }

        developers {
          developer {
            id = 'foilen'
            name = 'Simon Levesque'
            email = 'simon@foilen.com'
          }
        }
      }
    }
  }
}

signing {
  sign publishing.publications.mavenJava
}
tasks.withType(Sign) {
  onlyIf { isReleaseVersion }
}
